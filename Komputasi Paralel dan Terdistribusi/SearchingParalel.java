/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.yogi;

import java.time.Duration;
import java.time.LocalTime;
import java.util.Random;
import javax.swing.DefaultListModel;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.ListModel;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yogi
 */
public class SearchingParalel extends javax.swing.JFrame {

    private String nama;

    /**
     * Creates new form SearchingParalel
     */
    public SearchingParalel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fieldHasil = new javax.swing.JTextField();
        fieldCari = new javax.swing.JTextField();
        data = new javax.swing.JButton();
        Binary_Nama = new javax.swing.JButton();
        ururtkan_nama = new javax.swing.JButton();
        Binary_NIP = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Waktu_Akhir = new javax.swing.JTextField();
        banyakData = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Waktu_Awal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabel = new javax.swing.JTable();
        Urutkan_Nip = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        btn_komputasi1 = new javax.swing.JButton();
        btn_komputasi2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listDataSebelum = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listDataTerurut = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        wkt_kom1_awal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        wkt_kom1_akhir = new javax.swing.JTextField();
        wkt_kom2_awal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        wkt_kom2_akhir = new javax.swing.JTextField();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel1.setText("Cari");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel2.setText("Hasil");

        fieldHasil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldHasilActionPerformed(evt);
            }
        });

        fieldCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCariActionPerformed(evt);
            }
        });

        data.setText("Data");
        data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataActionPerformed(evt);
            }
        });

        Binary_Nama.setText("Binary_Nama");
        Binary_Nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Binary_NamaActionPerformed(evt);
            }
        });

        ururtkan_nama.setText("Urutkan_Nama");
        ururtkan_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ururtkan_namaActionPerformed(evt);
            }
        });

        Binary_NIP.setText("Binary_NIP");
        Binary_NIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Binary_NIPActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setText("Waktu Proses Akhir");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel4.setText("Banyak Data");

        Waktu_Akhir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Waktu_AkhirActionPerformed(evt);
            }
        });

        banyakData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banyakDataActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel5.setText("Waktu Proses Awal ");

        Waktu_Awal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Waktu_AwalActionPerformed(evt);
            }
        });

        Tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nama", "NIP"
            }
        ));
        jScrollPane2.setViewportView(Tabel);

        Urutkan_Nip.setText("Urutkan_NIP");
        Urutkan_Nip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Urutkan_NipActionPerformed(evt);
            }
        });

        jButton6.setText("Interpolasi");

        jButton7.setText("Linier_NIP");

        jButton8.setText("Linier_Nama");

        btn_komputasi1.setText("Komputasi_1");
        btn_komputasi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_komputasi1ActionPerformed(evt);
            }
        });

        btn_komputasi2.setText("Komputasi_2");
        btn_komputasi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_komputasi2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ururtkan_nama, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Binary_NIP, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Binary_Nama, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldHasil, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(Urutkan_Nip)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Waktu_Akhir, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                    .addComponent(Waktu_Awal))
                                .addGap(38, 38, 38)
                                .addComponent(jLabel4)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(banyakData, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_komputasi2)
                                    .addComponent(btn_komputasi1))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(fieldHasil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Binary_Nama, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ururtkan_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Binary_NIP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(banyakData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Waktu_Awal, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Waktu_Akhir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_komputasi1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_komputasi2)))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Urutkan_Nip, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel6.setText("Data Sebelum Terurut");

        jScrollPane3.setViewportView(listDataSebelum);

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel7.setText("Data Sesudah Terurut");

        jScrollPane4.setViewportView(listDataTerurut);

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel8.setText("Waktu Komputasi Awal 1 :");

        wkt_kom1_awal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wkt_kom1_awalActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel9.setText("Waktu Komputasi Akhir 1 :");

        wkt_kom1_akhir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wkt_kom1_akhirActionPerformed(evt);
            }
        });

        wkt_kom2_awal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wkt_kom2_awalActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel10.setText("Waktu Komputasi Awal 2 :");

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel11.setText("Waktu Komputasi Akhir 2 :");

        wkt_kom2_akhir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wkt_kom2_akhirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wkt_kom1_akhir, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wkt_kom1_awal, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wkt_kom2_awal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wkt_kom2_akhir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(wkt_kom1_awal, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(wkt_kom1_akhir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(wkt_kom2_awal, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(wkt_kom2_akhir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldHasilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldHasilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldHasilActionPerformed

    private void fieldCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCariActionPerformed
        // Field untuk input banyak data
        int jumlahData = Integer.parseInt(banyakData.getText());
        System.out.println("Jumlah data yang dimasukkan: " + jumlahData);
    }//GEN-LAST:event_fieldCariActionPerformed

    private void Waktu_AkhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Waktu_AkhirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Waktu_AkhirActionPerformed

    private void banyakDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banyakDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_banyakDataActionPerformed

    private void Waktu_AwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Waktu_AwalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Waktu_AwalActionPerformed

    private void dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataActionPerformed
        DefaultListModel<String> model = new DefaultListModel<>();
        Random random = new Random();

        int jumlahData = Integer.parseInt(banyakData.getText()); // Mendapatkan jumlah data dari input
        Map<Integer, Integer> nipCountMap = new HashMap<>(); // Menyimpan jumlah kemunculan NIP

        int maxDuplicate = 10; // Maksimal NIP yang sama muncul berapa kali

        for (int i = 0; i < jumlahData; i++) {
            // Menghasilkan NIP acak dari 0 hingga 99999 (5 digit)
            int nip;
            do {
                nip = random.nextInt(1000000); // NIP acak 5 digit
            } while (nipCountMap.getOrDefault(nip, 0) >= maxDuplicate); // Membatasi jumlah kemunculan NIP

            // Mencatat kemunculan NIP tersebut
            nipCountMap.put(nip, nipCountMap.getOrDefault(nip, 0) + 1);

            // Menghasilkan nama acak dari "Nama0" hingga "Nama9"
            int randomIndex = random.nextInt(10); // Mendapatkan indeks acak antara 0 dan 9
            String nama = "Nama" + randomIndex; // Menghasilkan nama acak

            // Menambahkan NIP dan nama ke model list
            model.addElement(nip + " - " + nama); // Format "NIP - Nama"
        }

        // Menampilkan data yang sudah di-generate di list (secara acak)
        listDataSebelum.setModel(model);
    }//GEN-LAST:event_dataActionPerformed

    private void ururtkan_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ururtkan_namaActionPerformed
        ListModel<String> model = listDataSebelum.getModel();

        // Ubah model menjadi list agar bisa diurutkan
        List<String> dataList = new ArrayList<>();
        for (int i = 0; i < model.getSize(); i++) {
            dataList.add(model.getElementAt(i));
        }

        // Mengurutkan data berdasarkan nama
        dataList.sort((a, b) -> {
            String namaA = a.split(" - ")[1]; // Ambil nama dari entry a
            String namaB = b.split(" - ")[1]; // Ambil nama dari entry b
            return namaA.compareTo(namaB); // Urutkan berdasarkan nama
        });

        // Mengupdate model dengan data yang sudah diurutkan
        DefaultListModel<String> sortedModel = new DefaultListModel<>();
        for (String data : dataList) {
            sortedModel.addElement(data);
        }

        // Menampilkan data yang sudah diurutkan di list
        listDataTerurut.setModel(sortedModel); // Ganti listDataTerurut dengan list yang sesuai
    }//GEN-LAST:event_ururtkan_namaActionPerformed

    private void Binary_NIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Binary_NIPActionPerformed
        String nipCari = fieldCari.getText(); // NIP yang ingin dicari
        ListModel<String> model = listDataSebelum.getModel();

        // Ubah model menjadi list agar bisa dilakukan sorting dan binary search
        List<String> dataList = new ArrayList<>();
        for (int i = 0; i < model.getSize(); i++) {
            dataList.add(model.getElementAt(i));
        }

        // Mengurutkan data berdasarkan NIP (tanpa mengubah tampilan di list)
        dataList.sort((a, b) -> {
            String nipA = a.split(" - ")[0];
            String nipB = b.split(" - ")[0];
            return nipA.compareTo(nipB);
        });

        // Binary Search untuk menemukan indeks NIP yang cocok
        int index = Collections.binarySearch(dataList, nipCari, (a, b) -> a.split(" - ")[0].compareTo(b));

        // Menampilkan hasil jika NIP ditemukan
        DefaultTableModel tableModel = (DefaultTableModel) Tabel.getModel();
        tableModel.setRowCount(0); // Kosongkan tabel

        if (index >= 0) {
            // Temukan semua entri yang memiliki NIP yang sama dengan mengiterasi ke depan dan ke belakang
            // Iterasi ke depan
            int i = index;
            while (i < dataList.size() && dataList.get(i).split(" - ")[0].equals(nipCari)) {
                String result = dataList.get(i);
                tableModel.addRow(new Object[]{result.split(" - ")[0], result.split(" - ")[1]});
                i++;
            }

            // Iterasi ke belakang
            i = index - 1;
            while (i >= 0 && dataList.get(i).split(" - ")[0].equals(nipCari)) {
                String result = dataList.get(i);
                tableModel.addRow(new Object[]{result.split(" - ")[0], result.split(" - ")[1]});
                i--;
            }
        } else {
            System.out.println("NIP tidak ditemukan");
        }
    }//GEN-LAST:event_Binary_NIPActionPerformed

    private void Binary_NamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Binary_NamaActionPerformed
        // Mendapatkan waktu awal
        LocalTime waktuAwal = LocalTime.now();

        String namaCari = fieldCari.getText(); // Nama yang ingin dicari
        ListModel<String> model = listDataSebelum.getModel();

        // Ubah model menjadi list agar bisa dilakukan sorting dan pencarian
        List<String> dataList = new ArrayList<>();
        for (int i = 0; i < model.getSize(); i++) {
            dataList.add(model.getElementAt(i));
        }

        // Menyiapkan tabel untuk menampilkan hasil
        DefaultTableModel tableModel = (DefaultTableModel) Tabel.getModel();
        tableModel.setRowCount(0); // Kosongkan tabel

        // Mencari semua entri yang memiliki nama yang sama
        for (String entry : dataList) {
            String[] parts = entry.split(" - "); // Memisahkan NIP dan nama
            String nama = parts[1]; // Ambil nama dari entry

            // Jika nama cocok, tambahkan ke tabel
            if (nama.equals(namaCari)) {
                tableModel.addRow(new Object[]{parts[0], nama}); // Tambahkan NIP dan nama ke tabel
            }
        }

        // Jika tidak ada hasil ditemukan
        if (tableModel.getRowCount() == 0) {
            System.out.println("Nama tidak ditemukan");
        }

        // Mendapatkan waktu akhir
        LocalTime waktuAkhir = LocalTime.now();

        // Menghitung durasi
        Duration durasi = Duration.between(waktuAwal, waktuAkhir);

        // Mengonversi durasi ke format hh:mm:ss
        String formattedWaktuAwal = String.format("%02d:%02d:%02d",
                waktuAwal.getHour(), waktuAwal.getMinute(), waktuAwal.getSecond());
        String formattedWaktuAkhir = String.format("%02d:%02d:%02d",
                waktuAkhir.getHour(), waktuAkhir.getMinute(), waktuAkhir.getSecond());

        // Menampilkan waktu proses ke dalam text field
        Waktu_Awal.setText(formattedWaktuAwal);
        Waktu_Akhir.setText(formattedWaktuAkhir);
    }//GEN-LAST:event_Binary_NamaActionPerformed

    private void Urutkan_NipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Urutkan_NipActionPerformed
        ListModel<String> model = listDataSebelum.getModel();

        // Mengubah model menjadi List agar bisa diurutkan
        List<String> dataList = new ArrayList<>();
        for (int i = 0; i < model.getSize(); i++) {
            dataList.add(model.getElementAt(i));
        }

        // Mengurutkan data berdasarkan NIP secara numerik
        dataList.sort((a, b) -> {
            int nipA = Integer.parseInt(a.split(" - ")[0]); // Mengonversi NIP menjadi Integer
            int nipB = Integer.parseInt(b.split(" - ")[0]);
            return Integer.compare(nipA, nipB); // Mengurutkan NIP secara numerik
        });

        // Mengupdate model dengan data yang sudah diurutkan
        DefaultListModel<String> sortedModel = new DefaultListModel<>();
        for (String data : dataList) {
            sortedModel.addElement(data);
        }

        // Menampilkan data yang sudah diurutkan di list
        listDataTerurut.setModel(sortedModel);
    }//GEN-LAST:event_Urutkan_NipActionPerformed

    private void btn_komputasi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_komputasi1ActionPerformed
     // Mendapatkan data dan membaginya menjadi dua bagian
    ListModel<String> model = listDataSebelum.getModel();
    List<String> dataList = new ArrayList<>();
    for (int i = 0; i < model.getSize(); i++) {
        dataList.add(model.getElementAt(i));
    }

    // Membagi data menjadi dua bagian
    int middle = dataList.size() / 2;
    List<String> part1 = dataList.subList(0, middle);

    // Mulai pencarian di komputasi 1
    SwingWorker<Void, Void> worker1 = new SwingWorker<Void, Void>() {
        @Override
        protected Void doInBackground() throws Exception {
            LocalTime waktuAwal = LocalTime.now();
            wkt_kom1_awal.setText(String.format("%02d:%02d:%02d", 
                waktuAwal.getHour(), waktuAwal.getMinute(), waktuAwal.getSecond()));

            String nipCari = fieldCari.getText(); // NIP yang ingin dicari
            DefaultTableModel tableModel1 = (DefaultTableModel) Tabel.getModel();
            tableModel1.setRowCount(0); // Kosongkan tabel

            // Pencarian berdasarkan NIP di part1
            boolean nipFound = false;
            for (String entry : part1) {
                String[] parts = entry.split(" - ");
                String nip = parts[0];
                if (nip.equals(nipCari)) {
                    tableModel1.addRow(new Object[]{nip, parts[1]});
                    nipFound = true;
                }
            }

            LocalTime waktuAkhir = LocalTime.now();
            wkt_kom1_akhir.setText(String.format("%02d:%02d:%02d", 
                waktuAkhir.getHour(), waktuAkhir.getMinute(), waktuAkhir.getSecond()));

            return null;
        }

        @Override
        protected void done() {
            System.out.println("Pencarian NIP di Komputasi 1 selesai.");
        }
    };

    worker1.execute(); // Eksekusi worker 1
    }//GEN-LAST:event_btn_komputasi1ActionPerformed

    private void btn_komputasi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_komputasi2ActionPerformed
        // Mendapatkan data yang sudah dibagi
    ListModel<String> model = listDataSebelum.getModel();
    List<String> dataList = new ArrayList<>();
    for (int i = 0; i < model.getSize(); i++) {
        dataList.add(model.getElementAt(i));
    }

    // Membagi data menjadi dua bagian (ambil part2)
    int middle = dataList.size() / 2;
    List<String> part2 = dataList.subList(middle, dataList.size());

    // Mulai pencarian di komputasi 2
    SwingWorker<Void, Void> worker2 = new SwingWorker<Void, Void>() {
        @Override
        protected Void doInBackground() throws Exception {
            LocalTime waktuAwal = LocalTime.now();
            wkt_kom2_awal.setText(String.format("%02d:%02d:%02d", 
                waktuAwal.getHour(), waktuAwal.getMinute(), waktuAwal.getSecond()));

            String namaCari = fieldCari.getText(); // Nama yang ingin dicari
            DefaultTableModel tableModel2 = (DefaultTableModel) Tabel.getModel();
            tableModel2.setRowCount(0); // Kosongkan tabel

            // Pencarian berdasarkan Nama di part2
            for (String entry : part2) {
                String[] parts = entry.split(" - ");
                String nama = parts[1];
                if (nama.equals(namaCari)) {
                    tableModel2.addRow(new Object[]{parts[0], nama});
                }
            }

            LocalTime waktuAkhir = LocalTime.now();
            wkt_kom2_akhir.setText(String.format("%02d:%02d:%02d", 
                waktuAkhir.getHour(), waktuAkhir.getMinute(), waktuAkhir.getSecond()));

            return null;
        }

        @Override
        protected void done() {
            System.out.println("Pencarian Nama di Komputasi 2 selesai.");
        }
    };

    worker2.execute(); // Eksekusi worker 2
    }//GEN-LAST:event_btn_komputasi2ActionPerformed

    private void wkt_kom1_awalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wkt_kom1_awalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wkt_kom1_awalActionPerformed

    private void wkt_kom1_akhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wkt_kom1_akhirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wkt_kom1_akhirActionPerformed

    private void wkt_kom2_awalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wkt_kom2_awalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wkt_kom2_awalActionPerformed

    private void wkt_kom2_akhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wkt_kom2_akhirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wkt_kom2_akhirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchingParalel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchingParalel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchingParalel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchingParalel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchingParalel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Binary_NIP;
    private javax.swing.JButton Binary_Nama;
    private javax.swing.JTable Tabel;
    private javax.swing.JButton Urutkan_Nip;
    private javax.swing.JTextField Waktu_Akhir;
    private javax.swing.JTextField Waktu_Awal;
    private javax.swing.JTextField banyakData;
    private javax.swing.JButton btn_komputasi1;
    private javax.swing.JButton btn_komputasi2;
    private javax.swing.JButton data;
    private javax.swing.JTextField fieldCari;
    private javax.swing.JTextField fieldHasil;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JList<String> listDataSebelum;
    private javax.swing.JList<String> listDataTerurut;
    private javax.swing.JButton ururtkan_nama;
    private javax.swing.JTextField wkt_kom1_akhir;
    private javax.swing.JTextField wkt_kom1_awal;
    private javax.swing.JTextField wkt_kom2_akhir;
    private javax.swing.JTextField wkt_kom2_awal;
    // End of variables declaration//GEN-END:variables
}
